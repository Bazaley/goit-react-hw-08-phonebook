{"version":3,"file":"static/js/250.49e7d4b8.chunk.js","mappings":"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","sources":["components/Particle/Particle.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/WeatherData/WeatherData.styled.js","components/WeatherData/WeatherData.jsx","components/WeatherForm/WeatherForm.styled.js","components/WeatherForm/WeatherForm.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import { useCallback } from 'react';\nimport Particles from 'react-tsparticles';\nimport { loadFull } from 'tsparticles';\n\nconst Particle = () => {\n  const particlesInit = useCallback(async engine => {\n    await loadFull(engine);\n  }, []);\n\n  return (\n    <Particles\n      id=\"tsparticles\"\n      init={particlesInit}\n      // options={{\n      //   fullScreen: {\n      //     zIndex: -1,\n      //   },\n      //   fpsLimit: 1000,\n      //   interactivity: {\n      //     events: {\n      //       onClick: {\n      //         enable: true,\n      //         mode: 'push',\n      //       },\n      //       onHover: {\n      //         enable: true,\n      //         mode: 'repulse',\n      //       },\n      //       resize: true,\n      //     },\n      //     modes: {\n      //       push: {\n      //         quantity: 4,\n      //       },\n      //       repulse: {\n      //         distance: 100,\n      //         duration: 0.4,\n      //       },\n      //     },\n      //   },\n\n      //   particles: {\n      //     color: {\n      //       value: '#0c4752',\n      //     },\n      //     links: {\n      //       color: '#08353b',\n      //       distance: 150,\n      //       enable: true,\n      //       opacity: 0.5,\n      //       width: 3,\n      //     },\n      //     collisions: {\n      //       enable: false,\n      //     },\n      //     move: {\n      //       directions: 'none',\n      //       enable: true,\n      //       outModes: {\n      //         default: 'bounce',\n      //       },\n      //       random: true,\n      //       speed: 2,\n      //       straight: true,\n      //     },\n      //     number: {\n      //       density: {\n      //         enable: true,\n      //         area: 700,\n      //       },\n      //       value: 50,\n      //     },\n      //     opacity: {\n      //       value: 0.5,\n      //     },\n      //     shape: {\n      //       type: 'circle',\n      //     },\n      //     size: {\n      //       value: { min: 4, max: 15 },\n      //     },\n      //   },\n      //   detectRetina: true,\n      // }}\n      options={{\n        fullScreen: {\n          zIndex: -1,\n        },\n        fpsLimit: 1000,\n\n        particles: {\n          number: {\n            value: 50,\n\n            density: {\n              enable: true,\n              value_area: 800,\n            },\n          },\n\n          opacity: {\n            value: 0.5,\n            random: false,\n            anim: {\n              enable: false,\n              speed: 3,\n              opacity_min: 0.1,\n              sync: false,\n            },\n          },\n          size: {\n            value: { min: 1, max: 2 },\n            random: true,\n          },\n          line_linked: {\n            enable: true,\n            distance: 200,\n            color: 'random',\n            opacity: 0.4,\n            width: 0,\n            triangles: {\n              enable: true,\n              color: '#ffffff',\n              opacity: 0.1,\n            },\n          },\n          move: {\n            enable: true,\n            speed: 1,\n            direction: 'none',\n            random: false,\n            straight: false,\n            out_mode: 'out',\n            attract: {\n              enable: false,\n              rotateX: 600,\n              rotateY: 1200,\n            },\n          },\n        },\n        interactivity: {\n          detect_on: 'canvas',\n          events: {\n            onhover: {\n              enable: true,\n              mode: 'repulse',\n            },\n            onclick: {\n              enable: true,\n              mode: 'push',\n            },\n            resize: true,\n          },\n        },\n        retina_detect: true,\n      }}\n    />\n  );\n};\n\nexport default Particle;\n","import styled from 'styled-components';\n\nexport const SectionTag = styled.section`\n  padding-top: 30px;\n  text-align: center;\n`;\n\nexport const TitleStyled = styled.h1`\n  margin-bottom: 30px;\n  text-shadow: 2px 1px white;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SectionTag, TitleStyled } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionTag>\n      {title && <TitleStyled>{title}</TitleStyled>}\n\n      {children}\n    </SectionTag>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  padding-top: 30px;\n`;\n\nexport const Paragraph = styled.p`\n  font-size: 22px;\n  margin-bottom: 20px;\n`;\n\nexport const ParagraphTemp = styled.p`\n  font-size: 26px;\n`;\n\nexport const BoxTemp = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectWeather } from 'redux/selectors';\nimport { Box, Paragraph, ParagraphTemp, BoxTemp } from './WeatherData.styled';\n\nconst WeatherData = () => {\n  const weather = useSelector(selectWeather);\n\n  return (\n    <>\n      {weather && (\n        <>\n          <Box>\n            <Paragraph>\n              {weather.name}, {weather.sys.country}\n            </Paragraph>\n            <BoxTemp>\n              <img\n                src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n                alt=\"\"\n              />\n              <ParagraphTemp>{Math.round(weather.main.temp)} Â°C </ParagraphTemp>\n            </BoxTemp>\n\n            <Paragraph>{weather.weather[0].description} </Paragraph>\n            <Paragraph>Wind Speed : {weather.wind.speed} m/s</Paragraph>\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default WeatherData;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  width: 400px;\n  min-height: 250px;\n  padding: 30px 20px 20px;\n\n  background: linear-gradient(\n    130deg,\n    #008080,\n    #20b2aa,\n    #00ffff,\n    #48d1cc,\n    #00ced1\n  );\n  opacity: 0.9;\n  box-shadow: 5px 5px 16px #756a6a;\n  border-radius: 4px;\n`;\n\nexport const FormTag = styled.form`\n  width: 400px;\n  margin: 0 auto;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 400px;\n  height: 23px;\n  border: none;\n  border-bottom: 1px solid black;\n  text-align: center;\n  outline: none;\n  background-color: transparent;\n  font-family: Acme;\n  font-size: 22px;\n  &::placeholder {\n    font-family: Acme;\n    font-size: 21px;\n    color: black;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  text-shadow: 2px 1px white;\n  margin-bottom: 45px;\n  font-size: 32px;\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchWeather } from 'redux/weather/weather-operations';\nimport WeatherData from 'components/WeatherData/WeatherData';\nimport { FormTag, Input, Label, Box } from './WeatherForm.styled';\n\nimport { TiWeatherPartlySunny } from 'react-icons/ti';\nconst WeatherForm = () => {\n  const [city, setCity] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(fetchWeather(city));\n  };\n  return (\n    <>\n      <Box>\n        <FormTag onSubmit={handleSubmit}>\n          <Label>\n            Weather <TiWeatherPartlySunny size={'30'} />\n          </Label>\n          <Input\n            type=\"text\"\n            value={city}\n            name=\"text\"\n            onChange={e => setCity(e.target.value)}\n            placeholder=\"Input Your City\"\n            autoComplete=\"off\"\n          />\n        </FormTag>\n        <WeatherData />\n      </Box>\n    </>\n  );\n};\n\nexport default WeatherForm;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const Paragraph = styled.p`\n  width: 300px;\n\n  font-size: 30px;\n`;\n","import React from 'react';\nimport Particle from 'components/Particle/Particle';\nimport { Section } from 'components/Section/Section';\nimport WeatherForm from 'components/WeatherForm/WeatherForm';\n\nimport { Box, Paragraph } from './Home.styled';\n\nconst Home = () => {\n  return (\n    <Section title=\"Welcome to your personal contact book\">\n      <>\n        <Box>\n          <div>\n            <WeatherForm />\n          </div>\n\n          <Paragraph>\n            Create your unique account or use the login button to access your\n            contact book\n          </Paragraph>\n        </Box>\n        <Particle />\n      </>\n    </Section>\n  );\n};\n\nexport default Home;\n"],"names":["particlesInit","useCallback","engine","loadFull","id","init","options","fullScreen","zIndex","fpsLimit","particles","number","value","density","enable","value_area","opacity","random","anim","speed","opacity_min","sync","size","min","max","line_linked","distance","color","width","triangles","move","direction","straight","out_mode","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","retina_detect","SectionTag","styled","TitleStyled","Section","title","children","Box","Paragraph","ParagraphTemp","BoxTemp","weather","useSelector","selectWeather","name","sys","country","src","icon","alt","Math","round","main","temp","description","wind","FormTag","Input","Label","useState","city","setCity","dispatch","useDispatch","onSubmit","e","preventDefault","fetchWeather","type","onChange","target","placeholder","autoComplete","Particle"],"sourceRoot":""}