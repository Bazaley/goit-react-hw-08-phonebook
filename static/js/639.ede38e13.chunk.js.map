{"version":3,"file":"static/js/639.ede38e13.chunk.js","mappings":"+MAwFA,IApFiB,WACf,IAAMA,GAAgBC,EAAAA,EAAAA,aAAW,mCAAC,WAAMC,GAAN,kFAC1BC,EAAAA,EAAAA,GAASD,GADiB,2CAAD,sDAE9B,IAEH,OACE,SAAC,IAAD,CACEE,GAAG,cACHC,KAAML,EACNM,QAAS,CACPC,WAAY,CACVC,QAAS,GAEXC,SAAU,IACVC,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPC,QAAQ,EACRC,KAAM,QAERC,QAAS,CACPF,QAAQ,EACRC,KAAM,WAERE,QAAQ,GAEVC,MAAO,CACLC,KAAM,CACJC,SAAU,GAEZC,QAAS,CACPC,SAAU,IACVC,SAAU,MAKhBC,UAAW,CACTC,MAAO,CACLC,MAAO,WAETC,MAAO,CACLF,MAAO,UACPH,SAAU,IACVR,QAAQ,EACRc,QAAS,GACTC,MAAO,GAETC,WAAY,CACVhB,QAAQ,GAEViB,KAAM,CACJC,WAAY,OACZlB,QAAQ,EACRmB,SAAU,CACRC,QAAS,UAEXC,QAAQ,EACRC,MAAO,EACPC,UAAU,GAEZC,OAAQ,CACNC,QAAS,CACPzB,QAAQ,EACR0B,KAAM,KAERd,MAAO,IAETE,QAAS,CACPF,MAAO,IAETe,MAAO,CACLC,KAAM,UAERC,KAAM,CACJjB,MAAO,CAAEkB,IAAK,EAAGC,IAAK,MAG1BC,cAAc,IAIrB,C,kFCpFYC,EAAaC,EAAAA,GAAAA,QAAH,qEAKVC,EAAcD,EAAAA,GAAAA,GAAH,+E,SCHXE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,UAACL,EAAD,WACGI,IAAS,SAACF,EAAD,UAAcE,IAEvBC,IAGN,C,6LCVKC,EAAUL,EAAAA,GAAAA,KAAH,mMAUPM,EAAQN,EAAAA,GAAAA,MAAH,kVAmBLO,EAAQP,EAAAA,GAAAA,MAAH,qEAMLQ,EAASR,EAAAA,GAAAA,OAAH,0S,SCwCZ,EAnEc,WACZ,OAA0BS,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAW1B,OACE,8BACqB,wCAAlBD,EAAME,SACL,SAAC,KAAD,CAAUC,GAAI,eAEd,SAACpB,EAAA,EAAD,CACEC,MAAM,mEADR,UAIE,iCACE,UAACE,EAAD,CAASkB,SAnBE,SAAAC,GACnBA,EAAEC,iBAEFX,GAASY,EAAAA,EAAAA,IAAM,CAAEhB,MAAAA,EAAOE,SAAAA,KAExBD,EAAS,IACTE,EAAY,GACb,EAYS,WACE,SAACN,EAAD,WACE,SAACD,EAAD,CACEZ,KAAK,QACLhB,MAAOgC,EACPiB,KAAK,QACLC,SAAU,SAAAJ,GAAC,OAAIb,EAASa,EAAEK,OAAOnD,MAAtB,EACXoD,YAAY,QACZC,aAAa,MACbC,UAAQ,OAGZ,SAACzB,EAAD,WACE,SAACD,EAAD,CACEZ,KAAK,WACLhB,MAAOkC,EACPe,KAAK,WACLC,SAAU,SAAAJ,GAAC,OAAIX,EAAYW,EAAEK,OAAOnD,MAAzB,EACXoD,YAAY,WACZC,aAAa,MACbC,UAAQ,OAIZ,SAACxB,EAAD,CAAQyB,SAAUjB,EAAlB,SACGA,GACC,SAACkB,EAAA,EAAD,CAAkBvC,KAAM,GAAIwC,MAAO,CAAE1D,MAAO,WAE5C,gBAIN,SAAC2D,EAAA,EAAD,UAMX,C","sources":["components/Particle/Particle.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Login/Login.styled.js","pages/Login/Login.jsx"],"sourcesContent":["import { useCallback } from 'react';\nimport Particles from 'react-tsparticles';\nimport { loadFull } from 'tsparticles';\n\nconst Particle = () => {\n  const particlesInit = useCallback(async engine => {\n    await loadFull(engine);\n  }, []);\n\n  return (\n    <Particles\n      id=\"tsparticles\"\n      init={particlesInit}\n      options={{\n        fullScreen: {\n          zIndex: -1,\n        },\n        fpsLimit: 1000,\n        interactivity: {\n          events: {\n            onClick: {\n              enable: true,\n              mode: 'push',\n            },\n            onHover: {\n              enable: true,\n              mode: 'repulse',\n            },\n            resize: true,\n          },\n          modes: {\n            push: {\n              quantity: 4,\n            },\n            repulse: {\n              distance: 100,\n              duration: 0.4,\n            },\n          },\n        },\n\n        particles: {\n          color: {\n            value: '#0c4752',\n          },\n          links: {\n            color: '#08353b',\n            distance: 150,\n            enable: true,\n            opacity: 0.5,\n            width: 3,\n          },\n          collisions: {\n            enable: false,\n          },\n          move: {\n            directions: 'none',\n            enable: true,\n            outModes: {\n              default: 'bounce',\n            },\n            random: true,\n            speed: 2,\n            straight: true,\n          },\n          number: {\n            density: {\n              enable: true,\n              area: 700,\n            },\n            value: 50,\n          },\n          opacity: {\n            value: 0.5,\n          },\n          shape: {\n            type: 'circle',\n          },\n          size: {\n            value: { min: 4, max: 15 },\n          },\n        },\n        detectRetina: true,\n      }}\n    />\n  );\n};\n\nexport default Particle;\n","import styled from 'styled-components';\n\nexport const SectionTag = styled.section`\n  padding-top: 30px;\n  text-align: center;\n`;\n\nexport const TitleStyled = styled.h1`\n  margin-bottom: 30px;\n  text-shadow: 2px 1px white;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SectionTag, TitleStyled } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionTag>\n      {title && <TitleStyled>{title}</TitleStyled>}\n\n      {children}\n    </SectionTag>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element.isRequired,\n};\n","import styled from 'styled-components';\n\nconst FormTag = styled.form`\n  width: 400px;\n  margin: 0 auto;\n  padding: 30px 20px 20px;\n  border-radius: 4px;\n  box-shadow: 5px 5px 16px #756a6a;\n  background-color: #82acfb;\n  opacity: 0.9;\n`;\n\nconst Input = styled.input`\n  display: block;\n  width: 400px;\n  height: 23px;\n  border: none;\n  border-bottom: 1px solid black;\n  text-align: center;\n  outline: none;\n  background-color: transparent;\n  font-family: Acme;\n  font-size: 22px;\n\n  &::placeholder {\n    font-family: Acme;\n    font-size: 21px;\n    color: black;\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n\n  margin-bottom: 45px;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 199px;\n  height: 35px;\n  margin: 0 auto;\n\n  border-radius: 4px;\n  border: none;\n  background-color: #5c5cec;\n  color: white;\n  font-size: 17px;\n  font-family: Acme;\n  cursor: pointer;\n`;\n\nexport { FormTag, Input, Label, Button };\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from 'redux/auth/auth-operations';\nimport { Section } from 'components/Section/Section';\nimport Particle from 'components/Particle/Particle';\nimport { selectAuthIsLoading, selectAuthError } from 'redux/selectors';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Navigate } from 'react-router-dom';\nimport { FormTag, Input, Label, Button } from './Login.styled';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectAuthIsLoading);\n  const error = useSelector(selectAuthError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(login({ email, password }));\n\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      {error.message === 'Request failed with status code 400' ? (\n        <Navigate to={'/register'} />\n      ) : (\n        <Section\n          title=\"\n    Enter your details and get access to your personal contact book\"\n        >\n          <>\n            <FormTag onSubmit={handleSubmit}>\n              <Label>\n                <Input\n                  type=\"email\"\n                  value={email}\n                  name=\"email\"\n                  onChange={e => setEmail(e.target.value)}\n                  placeholder=\"Email\"\n                  autoComplete=\"off\"\n                  required\n                />\n              </Label>\n              <Label>\n                <Input\n                  type=\"password\"\n                  value={password}\n                  name=\"password\"\n                  onChange={e => setPassword(e.target.value)}\n                  placeholder=\"Password\"\n                  autoComplete=\"off\"\n                  required\n                />\n              </Label>\n\n              <Button disabled={isLoading}>\n                {isLoading ? (\n                  <CircularProgress size={19} style={{ color: 'white' }} />\n                ) : (\n                  'Sign in'\n                )}\n              </Button>\n            </FormTag>\n            <Particle />\n          </>\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["particlesInit","useCallback","engine","loadFull","id","init","options","fullScreen","zIndex","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","color","value","links","opacity","width","collisions","move","directions","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina","SectionTag","styled","TitleStyled","Section","title","children","FormTag","Input","Label","Button","useState","email","setEmail","password","setPassword","dispatch","useDispatch","isLoading","useSelector","selectAuthIsLoading","error","selectAuthError","message","to","onSubmit","e","preventDefault","login","name","onChange","target","placeholder","autoComplete","required","disabled","CircularProgress","style","Particle"],"sourceRoot":""}