{"version":3,"file":"static/js/252.30f52301.chunk.js","mappings":"+MAwFA,IApFiB,WACf,IAAMA,GAAgBC,EAAAA,EAAAA,aAAW,mCAAC,WAAMC,GAAN,kFAC1BC,EAAAA,EAAAA,GAASD,GADiB,2CAAD,sDAE9B,IAEH,OACE,SAAC,IAAD,CACEE,GAAG,cACHC,KAAML,EACNM,QAAS,CACPC,WAAY,CACVC,QAAS,GAEXC,SAAU,IACVC,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPC,QAAQ,EACRC,KAAM,QAERC,QAAS,CACPF,QAAQ,EACRC,KAAM,WAERE,QAAQ,GAEVC,MAAO,CACLC,KAAM,CACJC,SAAU,GAEZC,QAAS,CACPC,SAAU,IACVC,SAAU,MAKhBC,UAAW,CACTC,MAAO,CACLC,MAAO,WAETC,MAAO,CACLF,MAAO,UACPH,SAAU,IACVR,QAAQ,EACRc,QAAS,GACTC,MAAO,GAETC,WAAY,CACVhB,QAAQ,GAEViB,KAAM,CACJC,WAAY,OACZlB,QAAQ,EACRmB,SAAU,CACRC,QAAS,UAEXC,QAAQ,EACRC,MAAO,EACPC,UAAU,GAEZC,OAAQ,CACNC,QAAS,CACPzB,QAAQ,EACR0B,KAAM,KAERd,MAAO,IAETE,QAAS,CACPF,MAAO,IAETe,MAAO,CACLC,KAAM,UAERC,KAAM,CACJjB,MAAO,CAAEkB,IAAK,EAAGC,IAAK,MAG1BC,cAAc,IAIrB,C,kFCpFYC,EAAaC,EAAAA,GAAAA,QAAH,qEAKVC,EAAcD,EAAAA,GAAAA,GAAH,+E,SCHXE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,UAACL,EAAD,WACGI,IAAS,SAACF,EAAD,UAAcE,IAEvBC,IAGN,C,sKCwBD,EA/BsB,WACpB,OAAwBC,EAAAA,EAAAA,WAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAAqBC,MAAlE,eAAOA,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUN,EAAAA,EAAAA,IAAYC,EAAAA,IAW5B,OACE,iBAAMM,SANa,SAAAC,GACnBA,EAAEC,iBACFL,GAASM,EAAAA,EAAAA,KAAc,kBAAKJ,GAAN,IAAeJ,KAAAA,KACtC,EAGC,UACE,4BACE,kBACEd,KAAK,OACLc,KAAK,OACL9B,MAAO8B,EACPS,SAhBa,SAAC,GAA2B,IAAfvC,EAAc,EAAxBwC,OAAUxC,MAChC+B,EAAQ/B,EACT,EAeOyC,QAAQ,yHACRhB,MAAM,yIACNiB,UAAQ,OAKjB,E,gDC9BYC,EAAOrB,EAAAA,GAAAA,GAAH,0WAkBJsB,EAAYtB,EAAAA,GAAAA,EAAH,4CAITuB,EAASvB,EAAAA,GAAAA,OAAH,uJAUNwB,GAAgBxB,EAAAA,EAAAA,IAAOyB,EAAAA,IAAPzB,CAAH,iHASb0B,GAAiB1B,EAAAA,EAAAA,IAAO2B,EAAAA,IAAP3B,CAAH,mHC3Bd4B,EAAe,WAC1B,IAAMC,GAAWvB,EAAAA,EAAAA,IAAYwB,EAAAA,IACvBC,GAASzB,EAAAA,EAAAA,IAAY0B,EAAAA,IACrBpB,GAAUN,EAAAA,EAAAA,IAAYC,EAAAA,IAEtBG,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGkB,EACEE,QAAO,qBAAGvB,KAAgByB,cAAcC,SAASH,EAAOE,cAAjD,IACPE,KAAI,YAA2B,IAAxB9E,EAAuB,EAAvBA,GAAImD,EAAmB,EAAnBA,KAAMlB,EAAa,EAAbA,OAChB,OACE,UAAC+B,EAAD,YACE,SAACe,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,WAFb,SAKG9B,EAAK,GAAG+B,iBAEX,SAACjB,EAAD,WACU,OAAPV,QAAO,IAAPA,OAAA,EAAAA,EAASJ,QAASA,GAAO,SAAC,EAAD,IAAoBA,KAEhD,UAACc,EAAD,eAAahC,EAAb,QACA,4BACE,SAACiC,EAAD,CACEiB,QAAM,EACN3E,QAAS,kBAAM6C,GAAS+B,EAAAA,EAAAA,GAAc,CAAEpF,GAAAA,EAAImD,KAAAA,EAAMlB,OAAAA,IAAzC,EAFX,UAIE,SAACoC,EAAD,CAAgB/B,KAAM,YAExB,SAAC4B,EAAD,CAAQ1D,QAAS,kBAAM6C,GAASgC,EAAAA,EAAAA,IAAcrF,GAA7B,EAAjB,UACE,SAACmE,EAAD,CAAe7B,KAAM,gBApBhBtC,EAyBd,KAGR,E,8BCzDKsF,EAAO3C,EAAAA,GAAAA,KAAH,uFAMJ4C,EAAQ5C,EAAAA,GAAAA,MAAH,wLCJE6C,EAAS,WACpB,IAAMnC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACE,SAACgC,EAAD,qCAEA,SAACC,EAAD,CACElD,KAAK,OACLuB,SAAU,SAAAH,GAAC,OAAIJ,GAASoC,EAAAA,EAAAA,GAAehC,EAAEI,OAAOxC,OAArC,MAIlB,ECfYqE,EAAO/C,EAAAA,GAAAA,GAAH,sFCoBjB,EAhBiB,WACf,OACE,iCACE,SAACE,EAAA,EAAD,CAASC,MAAM,sCAAf,UACE,iCACE,SAAC0C,EAAD,KACA,SAACE,EAAD,WACE,SAACnB,EAAD,YAIN,SAACoB,EAAA,EAAD,MAGL,C","sources":["components/Particle/Particle.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/UpdateContact/UpdateContact.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useCallback } from 'react';\nimport Particles from 'react-tsparticles';\nimport { loadFull } from 'tsparticles';\n\nconst Particle = () => {\n  const particlesInit = useCallback(async engine => {\n    await loadFull(engine);\n  }, []);\n\n  return (\n    <Particles\n      id=\"tsparticles\"\n      init={particlesInit}\n      options={{\n        fullScreen: {\n          zIndex: -1,\n        },\n        fpsLimit: 1000,\n        interactivity: {\n          events: {\n            onClick: {\n              enable: true,\n              mode: 'push',\n            },\n            onHover: {\n              enable: true,\n              mode: 'repulse',\n            },\n            resize: true,\n          },\n          modes: {\n            push: {\n              quantity: 4,\n            },\n            repulse: {\n              distance: 100,\n              duration: 0.4,\n            },\n          },\n        },\n\n        particles: {\n          color: {\n            value: '#0c4752',\n          },\n          links: {\n            color: '#08353b',\n            distance: 150,\n            enable: true,\n            opacity: 0.5,\n            width: 3,\n          },\n          collisions: {\n            enable: false,\n          },\n          move: {\n            directions: 'none',\n            enable: true,\n            outModes: {\n              default: 'bounce',\n            },\n            random: true,\n            speed: 2,\n            straight: true,\n          },\n          number: {\n            density: {\n              enable: true,\n              area: 700,\n            },\n            value: 50,\n          },\n          opacity: {\n            value: 0.5,\n          },\n          shape: {\n            type: 'circle',\n          },\n          size: {\n            value: { min: 4, max: 15 },\n          },\n        },\n        detectRetina: true,\n      }}\n    />\n  );\n};\n\nexport default Particle;\n","import styled from 'styled-components';\n\nexport const SectionTag = styled.section`\n  padding-top: 30px;\n  text-align: center;\n`;\n\nexport const TitleStyled = styled.h1`\n  margin-bottom: 30px;\n  text-shadow: 2px 1px white;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SectionTag, TitleStyled } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionTag>\n      {title && <TitleStyled>{title}</TitleStyled>}\n\n      {children}\n    </SectionTag>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectRenameContact } from 'redux/selectors';\nimport { updateContact } from 'redux/contacts/contacts-operations';\nimport { useState } from 'react';\n\nconst UpdateContact = () => {\n  const [name, setName] = useState(useSelector(selectRenameContact).name);\n  const dispatch = useDispatch();\n  const contact = useSelector(selectRenameContact);\n\n  const handleChange = ({ target: { value } }) => {\n    setName(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(updateContact({ ...contact, name }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n    </form>\n  );\n};\n\nexport default UpdateContact;\n","import styled from 'styled-components';\nimport { ImCross } from 'react-icons/im';\nimport { RxUpdate } from 'react-icons/rx';\n\nexport const Item = styled.li`\n  width: calc((100% - 60px) / 3);\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin-bottom: 30px;\n  padding: 20px 0;\n  border: 2px solid gray;\n  border-radius: 4px;\n  box-sizing: border-box;\n  background-color: #82acfb;\n  opacity: 0.9;\n\n  &:not(:nth-child(3n)) {\n    margin-right: 30px;\n  }\n`;\n\nexport const Paragraph = styled.p`\n  font-size: 18px;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n\n  border: none;\n  cursor: pointer;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const ImCrossStyled = styled(ImCross)`\n  color: black;\n  transition: color 250ms linear;\n\n  &:hover {\n    color: red;\n  }\n`;\n\nexport const GrUpdateStyled = styled(RxUpdate)`\n  color: black;\n  transition: color 250ms linear;\n\n  &:hover {\n    color: white;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectFilterContact,\n  selectContacts,\n  selectRenameContact,\n} from 'redux/selectors';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { Avatar } from '@mui/material';\nimport UpdateContact from '../UpdateContact/UpdateContact';\nimport { renameContact } from 'redux/contacts/contactsSlice';\nimport {\n  Button,\n  Item,\n  ImCrossStyled,\n  GrUpdateStyled,\n  Paragraph,\n} from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilterContact);\n  const contact = useSelector(selectRenameContact);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {contacts\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ id, name, number }) => {\n          return (\n            <Item key={id}>\n              <Avatar\n                sx={{\n                  bgcolor: '#2e6ee7',\n                }}\n              >\n                {name[0].toUpperCase()}\n              </Avatar>\n              <Paragraph>\n                {contact?.name === name ? <UpdateContact /> : name}\n              </Paragraph>\n              <Paragraph>({number})</Paragraph>\n              <div>\n                <Button\n                  rename\n                  onClick={() => dispatch(renameContact({ id, name, number }))}\n                >\n                  <GrUpdateStyled size={'20px'} />\n                </Button>\n                <Button onClick={() => dispatch(deleteContact(id))}>\n                  <ImCrossStyled size={'20px'} />\n                </Button>\n              </div>\n            </Item>\n          );\n        })}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nconst Span = styled.span`\n  display: block;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nconst Input = styled.input`\n  display: block;\n  margin: 0 auto;\n  width: 300px;\n  height: 30px;\n  margin-bottom: 20px;\n  border: none;\n  border-radius: 10px;\n  text-align: center;\n`;\n\nexport { Span, Input };\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filter/filterSlice';\nimport { Span, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      <Span>Find contacts by name</Span>\n\n      <Input\n        type=\"text\"\n        onChange={e => dispatch(filterContacts(e.target.value))}\n      />\n    </label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n","import { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Section } from 'components/Section/Section';\nimport Particle from 'components/Particle/Particle';\nimport { Filter } from 'components/Filter/Filter';\nimport { List } from './Contacts.styled';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Section title=\"All your contacts are located here!\">\n        <>\n          <Filter />\n          <List>\n            <ContactsList />\n          </List>\n        </>\n      </Section>\n      <Particle />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["particlesInit","useCallback","engine","loadFull","id","init","options","fullScreen","zIndex","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","color","value","links","opacity","width","collisions","move","directions","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina","SectionTag","styled","TitleStyled","Section","title","children","useState","useSelector","selectRenameContact","name","setName","dispatch","useDispatch","contact","onSubmit","e","preventDefault","updateContact","onChange","target","pattern","required","Item","Paragraph","Button","ImCrossStyled","ImCross","GrUpdateStyled","RxUpdate","ContactsList","contacts","selectContacts","filter","selectFilterContact","toLowerCase","includes","map","Avatar","sx","bgcolor","toUpperCase","rename","renameContact","deleteContact","Span","Input","Filter","filterContacts","List","Particle"],"sourceRoot":""}